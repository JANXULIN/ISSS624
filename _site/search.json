[
  {
    "objectID": "take home exercise 2/take home exercise 2.html",
    "href": "take home exercise 2/take home exercise 2.html",
    "title": "take home exercise 2 Singapore public bus commuter flows",
    "section": "",
    "text": "#overview We currently have data on people’s movement patterns as well as information on schools, businesses, and retail activities in different areas. The goal of this task is to identify common Saturday activities among the population. Through our analysis, we aim to provide recommendations to the government, suggesting potential enhancements to existing facilities or proposing the development of new amenities that align with people’s preferences. The objective is to make these facilities more appealing and strategically located for the community’s convenience.\n#Objective Our goal is to pinpoint popular weekend destinations, analyze the main facilities in those areas, and provide recommendations accordingly.\n#Data Geospatial data: Passenger Volume by Origin Destination Bus Stops, Bus Stop Location, Train Station and Train Station Exit Point, Master Plan 2019 Subzone Boundary, HDB Property Information, Business, Entertn, F&B, FinServ, Leisure&Recreation and Retails. Aspatial data: HDB Property Information. This data is for us to use.\n#Import the data\npacman::p_load(tmap, sf, DT, stplanr, sp, dplyr,\n               performance, reshape2, units, \n               ggpubr, tidyverse, mapview, httr, sfheaders, knitr, kableExtra)\n#Importing the OD data\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202310.csv\")\n\nRows: 5694297 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\nglimpse(odbus)\n\nRows: 5,694,297\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKENDS/HOLIDAY\", \"WEEKDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 7, 14, 14, 10, 20, 20,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 20281, 20281, 1…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 20141, 20141, 1…\n$ TOTAL_TRIPS         &lt;dbl&gt; 3, 5, 3, 5, 4, 1, 24, 2, 1, 7, 3, 2, 5, 1, 1, 1, 1…\nweekendmorning11_14 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS), .groups = 'keep')\ndatatable(weekendmorning11_14)\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\nwrite_rds(weekendmorning11_14, \"data/rds/weekendmorning11_14.rds\")\nweekendmorning11_14 &lt;- read_rds(\"data/rds/weekendmorning11_14.rds\")\n#Working with Geospatial Data\nbusstop &lt;- st_read(dsn = \"data/geospatial\", layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/linxu/ISSS624/take home exercise 2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\nbusstop_points = busstop %&gt;%\n  st_as_sf(coords = c(\"geometry\"), crs = 3414, remove = FALSE)\nmapview_busstop_points = mapview(busstop_points, cex = 0.5, alpha = .5, popup = NULL)\nmapview_busstop_points\narea_honeycomb_grid = st_make_grid(busstop_points, c(375, 375), what = \"polygons\", square = FALSE)\nhoneycomb_grid_sf = st_sf(area_honeycomb_grid) %&gt;%\n  mutate(grid_id = 1:length(lengths(area_honeycomb_grid)))\nhoneycomb_grid_sf$n_colli = lengths(st_intersects(honeycomb_grid_sf, busstop_points))\nhoneycomb_count = filter(honeycomb_grid_sf, n_colli &gt; 0)\nmap_honeycomb = tm_shape(honeycomb_count) +\n  tm_fill(\n    col = \"n_colli\",\n    palette = \"Reds\",\n    style = \"cont\",\n    title = \"Number of collisions\",\n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Number of collisions: \" = \"n_colli\"\n    ),\n    popup.format = list(\n      n_colli = list(format = \"f\", digits = 0)\n    )\n  ) +\n  tm_borders(col = \"grey40\", lwd = 0.7)\nmap_honeycomb\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\nbusstop_honeycomb_count &lt;- st_intersection(busstop, honeycomb_count) %&gt;%\n  select(BUS_STOP_N, grid_id) %&gt;%\n  st_drop_geometry()\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\nglimpse(busstop_honeycomb_count)\n\nRows: 5,162\nColumns: 2\n$ BUS_STOP_N &lt;chr&gt; \"25059\", \"25059\", \"25751\", \"26379\", \"26369\", \"25761\", \"2638…\n$ grid_id    &lt;int&gt; 3, 86, 170, 173, 174, 211, 214, 255, 255, 258, 295, 296, 29…\nwrite_rds(busstop_honeycomb_count, \"data/rds/busstop_honeycomb_count.rds\")\nweekendmorning11_14 &lt;- left_join(weekendmorning11_14 , busstop_honeycomb_count,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = grid_id,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nWarning in left_join(weekendmorning11_14, busstop_honeycomb_count, by = c(ORIGIN_PT_CODE = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 27736 of `x` matches multiple rows in `y`.\nℹ Row 3165 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\nduplicate &lt;- weekendmorning11_14 %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\nweekendmorning11_14 &lt;- unique(weekendmorning11_14)\nweekendmorning11_14 &lt;- left_join(weekendmorning11_14 , busstop_honeycomb_count,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) \n\nWarning in left_join(weekendmorning11_14, busstop_honeycomb_count, by = c(DESTIN_BS = \"BUS_STOP_N\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 206 of `x` matches multiple rows in `y`.\nℹ Row 3203 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\nduplicate &lt;- weekendmorning11_14 %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\nweekendmorning11_14 &lt;- unique(weekendmorning11_14)\nweekendmorning11_14 &lt;- weekendmorning11_14 %&gt;%\n  rename(DESTIN_SZ = grid_id) %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(WEEKENDDAYMORNING_PEAK = sum(TRIPS))\n\n`summarise()` has grouped output by 'ORIGIN_SZ'. You can override using the\n`.groups` argument.\nwrite_rds(weekendmorning11_14, \"data/rds/weekendmorning11_14.rds\")\nweekendmorning11_14 &lt;- read_rds(\"data/rds/weekendmorning11_14.rds\")\nweekendmorning11_14_1 &lt;- weekendmorning11_14[weekendmorning11_14$ORIGIN_SZ!=weekendmorning11_14$DESTIN_SZ,]\nflowLine &lt;- od2line(flow = weekendmorning11_14_1, \n                    zones = honeycomb_count,\n                    zone_code = \"grid_id\")\n\nCreating centroids representing desire line start and end points.\ntm_shape(honeycomb_count) +\n  tm_polygons() +\nflowLine %&gt;%  \ntm_shape() +\n  tm_lines(lwd = \"WEEKENDDAYMORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length\ntm_shape(honeycomb_count) +\n  tm_polygons() +\nflowLine %&gt;%  \n  filter(WEEKENDDAYMORNING_PEAK &gt;= 2000) %&gt;%\ntm_shape() +\n  tm_lines(lwd = \"WEEKENDDAYMORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\nWarning in g$scale * (w_legend/maxW): longer object length is not a multiple of\nshorter object length\n\n\nWarning in g$scale * (x/maxW): longer object length is not a multiple of\nshorter object length"
  },
  {
    "objectID": "take home exercise 2/take home exercise 2.html#entertn",
    "href": "take home exercise 2/take home exercise 2.html#entertn",
    "title": "take home exercise 2 Singapore public bus commuter flows",
    "section": "entertn",
    "text": "entertn\n\nentertn_sf &lt;- st_read(dsn = \"data/geospatial/\",\n                layer = \"entertn\")%&gt;%\n  st_transform(crs = 3414)\n\nReading layer `entertn' from data source \n  `/Users/linxu/ISSS624/take home exercise 2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(honeycomb_count) +\n  tm_polygons() +\ntm_shape(entertn_sf) +\n  tm_dots()\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\nhoneycomb_count$`ENTERTN_COUNT`&lt;- lengths(\n  st_intersects(\n    honeycomb_count, entertn_sf))\n\n\nsummary(honeycomb_count$ENTERTN_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.0455  0.0000  7.0000"
  },
  {
    "objectID": "take home exercise 2/take home exercise 2.html#liesurerecreation",
    "href": "take home exercise 2/take home exercise 2.html#liesurerecreation",
    "title": "take home exercise 2 Singapore public bus commuter flows",
    "section": "Liesure&Recreation",
    "text": "Liesure&Recreation\n\nlr_sf &lt;- st_read(dsn = \"data/geospatial/\",\n                                    layer = \"Liesure&Recreation\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `Liesure&Recreation' from data source \n  `/Users/linxu/ISSS624/take home exercise 2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(honeycomb_count) +\n  tm_polygons() +\ntm_shape(lr_sf) +\n  tm_dots()\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\nhoneycomb_count$`LR_COUNT`&lt;- lengths(\n  st_intersects(\n    honeycomb_count, lr_sf))\n\n\nsummary(honeycomb_count$LR_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.0000  0.4007  0.0000 23.0000 \n\n\n##Retails\n\nretails_sf &lt;- st_read(dsn = \"data/geospatial/\",\n                layer = \"Retails\")%&gt;%\n  st_transform(crs = 3414)\n\nReading layer `Retails' from data source \n  `/Users/linxu/ISSS624/take home exercise 2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(honeycomb_count) +\n  tm_polygons() +\ntm_shape(retails_sf) +\n  tm_dots()\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\nhoneycomb_count$`RETAILS_COUNT`&lt;- lengths(\n  st_intersects(\n    honeycomb_count, retails_sf))\n\n\nsummary(honeycomb_count$RETAILS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    2.00   15.42    9.00  987.00 \n\n\n#数据整合\n\nhoneycomb_count_tidy &lt;- honeycomb_count %&gt;%\n  st_drop_geometry() %&gt;%\n  select(grid_id, SCHOOL_COUNT, RTSS_COUNT, ENTERTN_COUNT, LR_COUNT, RETAILS_COUNT)\n\n\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(honeycomb_count_tidy,\n            by = c(\"DESTIN_SZ\" = \"grid_id\")) \n\n\nsummary(flow_data1)\n\n   ORIGIN_SZ      DESTIN_SZ        TRIPS           FlowNoIntra      \n Min.   : 170   Min.   : 170   Min.   :    1.00   Min.   :    0.00  \n 1st Qu.:4569   1st Qu.:4573   1st Qu.:    2.00   1st Qu.:    2.00  \n Median :5699   Median :5698   Median :    8.00   Median :    7.00  \n Mean   :5623   Mean   :5616   Mean   :   46.69   Mean   :   46.51  \n 3rd Qu.:6775   3rd Qu.:6743   3rd Qu.:   26.00   3rd Qu.:   26.00  \n Max.   :9888   Max.   :9888   Max.   :43417.00   Max.   :43417.00  \n     offset              DIST          area_honeycomb_grid    n_colli     \n Min.   :0.000001   Min.   :   50   POLYGON      :161094   Min.   : 1.00  \n 1st Qu.:1.000000   1st Qu.: 2088   epsg:3414    :     0   1st Qu.: 2.00  \n Median :1.000000   Median : 4226   +proj=tmer...:     0   Median : 3.00  \n Mean   :0.995934   Mean   : 5213                          Mean   : 2.89  \n 3rd Qu.:1.000000   3rd Qu.: 7377                          3rd Qu.: 4.00  \n Max.   :1.000000   Max.   :24827                          Max.   :10.00  \n  SCHOOL_COUNT      RTSS_COUNT     ENTERTN_COUNT       LR_COUNT      \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   : 0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.: 0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000   Median : 0.0000  \n Mean   :0.1399   Mean   :0.1862   Mean   :0.1138   Mean   : 0.7081  \n 3rd Qu.:0.0000   3rd Qu.:0.0000   3rd Qu.:0.0000   3rd Qu.: 1.0000  \n Max.   :4.0000   Max.   :4.0000   Max.   :7.0000   Max.   :23.0000  \n RETAILS_COUNT   \n Min.   :  0.00  \n 1st Qu.:  1.00  \n Median :  6.00  \n Mean   : 35.52  \n 3rd Qu.: 26.00  \n Max.   :987.00  \n\n\n\nflow_data1$SCHOOL_COUNT &lt;- ifelse(\n  flow_data1$SCHOOL_COUNT == 0,\n  0.99, flow_data1$SCHOOL_COUNT)\nflow_data1$RTSS_COUNT &lt;- ifelse(\n  flow_data1$RTSS_COUNT == 0,\n  0.99, flow_data1$RTSS_COUNT)\nflow_data1$ENTERTN_COUNT &lt;- ifelse(\n  flow_data1$ENTERTN_COUNT == 0,\n  0.99, flow_data1$ENTERTN_COUNT)\nflow_data1$LR_COUNT &lt;- ifelse(\n  flow_data1$LR_COUNT == 0,\n  0.99, flow_data1$LR_COUNT)\nflow_data1$RETAILS_COUNT &lt;- ifelse(\n  flow_data1$RETAILS_COUNT == 0,\n  0.99, flow_data1$RETAILS_COUNT)\n\n\nsummary(flow_data1)\n\n   ORIGIN_SZ      DESTIN_SZ        TRIPS           FlowNoIntra      \n Min.   : 170   Min.   : 170   Min.   :    1.00   Min.   :    0.00  \n 1st Qu.:4569   1st Qu.:4573   1st Qu.:    2.00   1st Qu.:    2.00  \n Median :5699   Median :5698   Median :    8.00   Median :    7.00  \n Mean   :5623   Mean   :5616   Mean   :   46.69   Mean   :   46.51  \n 3rd Qu.:6775   3rd Qu.:6743   3rd Qu.:   26.00   3rd Qu.:   26.00  \n Max.   :9888   Max.   :9888   Max.   :43417.00   Max.   :43417.00  \n     offset              DIST          area_honeycomb_grid    n_colli     \n Min.   :0.000001   Min.   :   50   POLYGON      :161094   Min.   : 1.00  \n 1st Qu.:1.000000   1st Qu.: 2088   epsg:3414    :     0   1st Qu.: 2.00  \n Median :1.000000   Median : 4226   +proj=tmer...:     0   Median : 3.00  \n Mean   :0.995934   Mean   : 5213                          Mean   : 2.89  \n 3rd Qu.:1.000000   3rd Qu.: 7377                          3rd Qu.: 4.00  \n Max.   :1.000000   Max.   :24827                          Max.   :10.00  \n  SCHOOL_COUNT     RTSS_COUNT    ENTERTN_COUNT      LR_COUNT     \n Min.   :0.990   Min.   :0.990   Min.   :0.990   Min.   : 0.990  \n 1st Qu.:0.990   1st Qu.:0.990   1st Qu.:0.990   1st Qu.: 0.990  \n Median :0.990   Median :0.990   Median :0.990   Median : 0.990  \n Mean   :1.007   Mean   :1.021   Mean   :1.035   Mean   : 1.407  \n 3rd Qu.:0.990   3rd Qu.:0.990   3rd Qu.:0.990   3rd Qu.: 1.000  \n Max.   :4.000   Max.   :4.000   Max.   :7.000   Max.   :23.000  \n RETAILS_COUNT   \n Min.   :  0.99  \n 1st Qu.:  1.00  \n Median :  6.00  \n Mean   : 35.70  \n 3rd Qu.: 26.00  \n Max.   :987.00  \n\n\n\nwrite_rds(flow_data1,\n          \"data/rds/flow_data_tidy.rds\")\n\n##SIM\n\nflow_data2 &lt;- read_rds(\"data/rds/flow_data_tidy.rds\")\n\n\nglimpse(flow_data2)\n\nRows: 161,094\nColumns: 13\nGroups: ORIGIN_SZ [2,137]\n$ ORIGIN_SZ           &lt;int&gt; 170, 170, 170, 173, 173, 173, 173, 173, 174, 174, …\n$ DESTIN_SZ           &lt;int&gt; 377, 462, 594, 301, 342, 554, 555, 1548, 214, 297,…\n$ TRIPS               &lt;dbl&gt; 4, 2, 20, 1, 5, 3, 31, 12, 1, 1, 9, 42, 23, 4, 14,…\n$ FlowNoIntra         &lt;dbl&gt; 4, 2, 20, 1, 5, 3, 31, 12, 1, 1, 9, 42, 23, 4, 14,…\n$ offset              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ DIST                &lt;dbl&gt; 992.1567, 1634.5871, 6139.0146, 2341.8742, 2087.91…\n$ area_honeycomb_grid &lt;POLYGON [m]&gt; POLYGON ((5470.122 28214.15..., POLYGON ((…\n$ n_colli             &lt;int&gt; 1, 1, 5, 2, 2, 4, 4, 6, 1, 1, 4, 4, 6, 2, 2, 1, 1,…\n$ SCHOOL_COUNT        &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ RTSS_COUNT          &lt;dbl&gt; 0.99, 0.99, 1.00, 0.99, 0.99, 0.99, 0.99, 1.00, 0.…\n$ ENTERTN_COUNT       &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ LR_COUNT            &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.…\n$ RETAILS_COUNT       &lt;dbl&gt; 0.99, 0.99, 2.00, 0.99, 0.99, 0.99, 0.99, 9.00, 1.…\n\n\n\nkable(head(flow_data2[, 1:5], n = 5))\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nTRIPS\nFlowNoIntra\noffset\n\n\n\n\n170\n377\n4\n4\n1\n\n\n170\n462\n2\n2\n1\n\n\n170\n594\n20\n20\n1\n\n\n173\n301\n1\n1\n1\n\n\n173\n342\n5\n5\n1\n\n\n\n\n\n\n\n\nflow_data2$FlowNoIntra &lt;- ifelse(\n  flow_data2$ORIGIN_SZ == flow_data2$DESTIN_SZ, \n  0, flow_data2$TRIPS)\nflow_data2$offset &lt;- ifelse(\n  flow_data2$ORIGIN_SZ == flow_data2$DESTIN_SZ, \n  0.000001, 1)\n\n\ninter_zonal_flow &lt;- flow_data2 %&gt;%\n  filter(FlowNoIntra &gt; 0)\n\n\norcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ +\n                log(SCHOOL_COUNT) +  \n                log(RTSS_COUNT) + \n                log(RETAILS_COUNT) +\n                log(LR_COUNT) +\n                log(DIST) - 1,\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(orcSIM_Poisson)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT) + log(RTSS_COUNT) + \n    log(RETAILS_COUNT) + log(LR_COUNT) + log(DIST) - 1, family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n                     Estimate Std. Error z value Pr(&gt;|z|)    \nORIGIN_SZ           2.280e-04  2.405e-07  947.77   &lt;2e-16 ***\nlog(SCHOOL_COUNT)   2.943e-01  4.027e-03   73.08   &lt;2e-16 ***\nlog(RTSS_COUNT)     5.192e-01  2.124e-03  244.46   &lt;2e-16 ***\nlog(RETAILS_COUNT)  2.193e-01  2.348e-04  933.80   &lt;2e-16 ***\nlog(LR_COUNT)      -2.549e-01  8.729e-04 -292.03   &lt;2e-16 ***\nlog(DIST)           2.248e-01  1.921e-04 1169.86   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 69623153  on 160439  degrees of freedom\nResidual deviance: 31139749  on 160433  degrees of freedom\nAIC: 31794840\n\nNumber of Fisher Scoring iterations: 8\n\n\n\nCalcRSquared &lt;- function(observed, estimated){\n  r &lt;- cor(observed, estimated)\n  R2 &lt;- r^2\n  R2\n}\n\n\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.0005280721\n\n\n##Model\n\ndbcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ +\n                log(DIST),\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(dbcSIM_Poisson)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n              Estimate Std. Error  z value Pr(&gt;|z|)    \n(Intercept)  1.101e+01  2.983e-03  3690.73   &lt;2e-16 ***\nORIGIN_SZ   -5.463e-05  5.531e-07   -98.77   &lt;2e-16 ***\nDESTIN_SZ    2.598e-05  5.544e-07    46.86   &lt;2e-16 ***\nlog(DIST)   -8.935e-01  3.730e-04 -2395.72   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 26682998  on 160438  degrees of freedom\nResidual deviance: 21009758  on 160435  degrees of freedom\nAIC: 21664845\n\nNumber of Fisher Scoring iterations: 7\n\n\n\nCalcRSquared(dbcSIM_Poisson$data$TRIPS,\n             dbcSIM_Poisson$fitted.values)\n\n[1] 0.02906638\n\n\n\nmodel_list &lt;- list(\n  Origin_Constrained = orcSIM_Poisson,\n  Doubly_Constrained = dbcSIM_Poisson)\n\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName               | Model |    RMSE\n------------------------------------\nOrigin_Constrained |   glm | 241.822\nDoubly_Constrained |   glm | 236.192\n\n\n##Visualising\n\ndf &lt;- as.data.frame(orcSIM_Poisson$fitted.values) %&gt;%\n  round(digits = 0)"
  },
  {
    "objectID": "in-class exercise 1/data/geospatial/MPSZ-2019.html",
    "href": "in-class exercise 1/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "hands-on exercise 3/data/geospatial/MPSZ-2019.html",
    "href": "hands-on exercise 3/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "take home exercise 1/data/geospatial/MPSZ-2019.html",
    "href": "take home exercise 1/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "in-class exercise 3/data/geospatial/MPSZ-2019.html",
    "href": "in-class exercise 3/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "in-class exercise 4/in-class exercise 4.html",
    "href": "in-class exercise 4/in-class exercise 4.html",
    "title": "in-class exercise 4",
    "section": "",
    "text": "pacman:: p_load(tidyverse, sf, tmap, httr)\n\n\nurl&lt;-\"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv&lt;-read_csv(\"data/aspatial/Generalinformationofschools.csv\")\n\nRows: 346 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (31): school_name, url_address, address, postal_code, telephone_no, tele...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npostcodes&lt;-csv$`postal_code`\n\nfound&lt;-data.frame()\nnot_found&lt;-data.frame()\n\nfor(postcode in postcodes){\n  query&lt;-list('searchVal'=postcode,'returnGeom'='Y','getAddrDetails'='Y','pageNum'='1')\n  res&lt;- GET(url,query=query)\n  \n  if((content(res)$found)!=0){\n    found&lt;-rbind(found,data.frame(content(res))[4:13])\n  } else{\n    not_found = data.frame(postcode)\n  }\n}\n\n\nmerged = merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)\nwrite.csv(merged, file = \"data/aspatial/schools.csv\")\nwrite.csv(not_found, file = \"data/aspatial/not_found.csv\")\n\n\nschools &lt;- read_csv(\"data/aspatial/schools.csv\") %&gt;%\n  rename(latitude = \"results.LATITUDE\",\n         longitude = \"results.LONGITUDE\")%&gt;%\n  select(postal_code, school_name, latitude, longitude)\n\nNew names:\nRows: 350 Columns: 41\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(36): postal_code, school_name, url_address, address, telephone_no, tele... dbl\n(5): ...1, results.X, results.Y, results.LATITUDE, results.LONGITUDE\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\n\nschools_no_missing &lt;- schools[complete.cases(schools[, c(\"longitude\", \"latitude\")]), ]\nschools_sf &lt;- st_as_sf(schools_no_missing, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs = 4326) %&gt;%\n               st_transform(crs = 3414)\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial/\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/linxu/ISSS624/in-class exercise 4/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(schools_sf) +\n  tm_dots()\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\nmpsz$`SCHOOL_COUNT`&lt;- lengths(\n  st_intersects(\n    mpsz, schools_sf))\n\n\nsummary(mpsz$SCHOOL_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.051   2.000  12.000 \n\n\n\nbusiness_sf &lt;- st_read(dsn = \"data/geospatial\",\n                      layer = \"Business\")\n\nReading layer `Business' from data source \n  `/Users/linxu/ISSS624/in-class exercise 4/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(business_sf) +\n  tm_dots()\n\nWarning: The shape mpsz is invalid. See sf::st_is_valid\n\n\n\n\n\n\nmpsz$`BUSINESS_COUNT`&lt;- lengths(\n  st_intersects(\n    mpsz, business_sf))\n\n\nsummary(mpsz$BUSINESS_COUNT)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    2.00   19.73   13.00  307.00 \n\n\n\nflow_data &lt;- read_rds(\"data/rds/flow_data_tidy.rds\")\nflow_data\n\nSimple feature collection with 14734 features and 12 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 5105.594 ymin: 25813.33 xmax: 49483.22 ymax: 49552.79\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK      dist ORIGIN_AGE7_12 ORIGIN_AGE13_24\n1     AMSZ01    AMSZ01         1998   50.0000            310             710\n2     AMSZ01    AMSZ02         8289  810.4491            310             710\n3     AMSZ01    AMSZ03         8971 1360.9294            310             710\n4     AMSZ01    AMSZ04         2252  840.4432            310             710\n5     AMSZ01    AMSZ05         6136 1076.7916            310             710\n6     AMSZ01    AMSZ06         2148  805.2979            310             710\n7     AMSZ01    AMSZ07         1620 1798.7526            310             710\n8     AMSZ01    AMSZ08         1925 2576.0199            310             710\n9     AMSZ01    AMSZ09         1773 1204.2846            310             710\n10    AMSZ01    AMSZ10           63 1417.8035            310             710\n   ORIGIN_AGE25_64 DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64 SCHOOL_COUNT\n1             2780         310.00          710.00         2780.00         0.99\n2             2780        1140.00         2770.00        15700.00         2.00\n3             2780        1010.00         2650.00        14240.00         2.00\n4             2780         980.00         2000.00        11320.00         1.00\n5             2780         810.00         1920.00         9650.00         3.00\n6             2780        1050.00         2390.00        12460.00         2.00\n7             2780         420.00         1120.00         3620.00         0.99\n8             2780         390.00         1150.00         4350.00         0.99\n9             2780        1190.00         3260.00        13350.00         3.00\n10            2780           0.99            0.99            0.99         1.00\n   RETAIL_COUNT                       geometry\n1          1.00 LINESTRING (29501.77 39419....\n2          0.99 LINESTRING (29501.77 39419....\n3          6.00 LINESTRING (29501.77 39419....\n4          0.99 LINESTRING (29501.77 39419....\n5          0.99 LINESTRING (29501.77 39419....\n6          0.99 LINESTRING (29501.77 39419....\n7          1.00 LINESTRING (29501.77 39419....\n8        117.00 LINESTRING (29501.77 39419....\n9          0.99 LINESTRING (29501.77 39419....\n10        20.00 LINESTRING (29501.77 39419....\n\n\n\nmpsz_tidy &lt;- mpsz %&gt;%\n  st_drop_geometry() %&gt;%\n  select(SUBZONE_C, SCHOOL_COUNT, BUSINESS_COUNT)\n\n\nflow_data &lt;- flow_data %&gt;%\n  left_join(mpsz_tidy,\n            by = c(\"DESTIN_SZ\" = \"SUBZONE_C\")) %&gt;%\n  rename(TRIPS = MORNING_PEAK,\n         DIST = dist)\n\n\nsummary(flow_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS             DIST      \n Length:14734       Length:14734       Min.   :     1   Min.   :   50  \n Class :character   Class :character   1st Qu.:    14   1st Qu.: 3346  \n Mode  :character   Mode  :character   Median :    76   Median : 6067  \n                                       Mean   :  1021   Mean   : 6880  \n                                       3rd Qu.:   426   3rd Qu.: 9729  \n                                       Max.   :232187   Max.   :26136  \n ORIGIN_AGE7_12    ORIGIN_AGE13_24    ORIGIN_AGE25_64    DESTIN_AGE7_12   \n Min.   :   0.99   Min.   :    0.99   Min.   :    0.99   Min.   :   0.99  \n 1st Qu.: 240.00   1st Qu.:  440.00   1st Qu.: 2200.00   1st Qu.: 240.00  \n Median : 700.00   Median : 1350.00   Median : 6810.00   Median : 720.00  \n Mean   :1031.86   Mean   : 2268.84   Mean   :10487.62   Mean   :1033.40  \n 3rd Qu.:1480.00   3rd Qu.: 3260.00   3rd Qu.:15770.00   3rd Qu.:1500.00  \n Max.   :6340.00   Max.   :16380.00   Max.   :74610.00   Max.   :6340.00  \n DESTIN_AGE13_24    DESTIN_AGE25_64    SCHOOL_COUNT.x    RETAIL_COUNT   \n Min.   :    0.99   Min.   :    0.99   Min.   : 0.990   Min.   :  0.99  \n 1st Qu.:  460.00   1st Qu.: 2200.00   1st Qu.: 0.990   1st Qu.:  0.99  \n Median : 1420.00   Median : 7030.00   Median : 1.000   Median :  3.00  \n Mean   : 2290.35   Mean   :10574.46   Mean   : 1.987   Mean   : 16.47  \n 3rd Qu.: 3260.00   3rd Qu.:15830.00   3rd Qu.: 2.000   3rd Qu.: 12.00  \n Max.   :16380.00   Max.   :74610.00   Max.   :12.000   Max.   :307.00  \n SCHOOL_COUNT.y  BUSINESS_COUNT            geometry    \n Min.   : 0.00   Min.   :  0.00   LINESTRING   :14734  \n 1st Qu.: 0.00   1st Qu.:  0.00   epsg:3414    :    0  \n Median : 1.00   Median :  3.00   +proj=tmer...:    0  \n Mean   : 1.58   Mean   : 16.17                        \n 3rd Qu.: 2.00   3rd Qu.: 12.00                        \n Max.   :12.00   Max.   :307.00"
  },
  {
    "objectID": "in-class exercise 4/data/geospatial/MPSZ-2019.html",
    "href": "in-class exercise 4/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "in-class exercise 4/data/geospatial/Business.html",
    "href": "in-class exercise 4/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 2/data/geospatial/F&B.html",
    "href": "take home exercise 2/data/geospatial/F&B.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 2/data/geospatial/Liesure&Recreation.html",
    "href": "take home exercise 2/data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 2/data/geospatial/entertn.html",
    "href": "take home exercise 2/data/geospatial/entertn.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 2/data/geospatial/Retails.html",
    "href": "take home exercise 2/data/geospatial/Retails.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 2/data/geospatial/FinServ.html",
    "href": "take home exercise 2/data/geospatial/FinServ.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 2/data/geospatial/Business.html",
    "href": "take home exercise 2/data/geospatial/Business.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html",
    "href": "take home exercise 1/take home exercise 1.html",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "With the advancement of our technology, GPS and RFID systems are now installed in our vehicles, particularly in public buses equipped with smart cards and GPS that collect extensive data on routes and passenger volumes. Analyzing these mobility data helps us gain a deeper understanding of people’s lifestyles and habits. This understanding enables us to better manage urban systems and provides valuable information to both private and public sectors in urban transport services, assisting in making informed decisions to gain a competitive edge."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#get-started-setting-the-analytical-tools-the-code-chunk-below-installs-and-loads-sf-spdep-tmap-tidyverse-patchwork-packages-into-r-environment.-pacman-is-a-r-package-management-tool.",
    "href": "take home exercise 1/take home exercise 1.html#get-started-setting-the-analytical-tools-the-code-chunk-below-installs-and-loads-sf-spdep-tmap-tidyverse-patchwork-packages-into-r-environment.-pacman-is-a-r-package-management-tool.",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Get Started Setting the Analytical Tools The code chunk below installs and loads sf, spdep, tmap, tidyverse, patchwork packages into R environment. pacman() is a R package management tool.",
    "text": "Get Started Setting the Analytical Tools The code chunk below installs and loads sf, spdep, tmap, tidyverse, patchwork packages into R environment. pacman() is a R package management tool.\n\npacman::p_load(sf, sfdep, tmap, tidyverse, knitr, ggplot2, mapview, spdep, dplyr, plotly, Kendall)"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#data-preparation-aspatial-data-passenger-volume-by-origin-destination-bus-stops-privoded-by-ltadatamall",
    "href": "take home exercise 1/take home exercise 1.html#data-preparation-aspatial-data-passenger-volume-by-origin-destination-bus-stops-privoded-by-ltadatamall",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Data Preparation Aspatial data Passenger Volume by Origin Destination Bus Stops privoded by LTADataMall",
    "text": "Data Preparation Aspatial data Passenger Volume by Origin Destination Bus Stops privoded by LTADataMall\nGeospatial data * Bus Stop Location from LTA DataMall. It privodes the bus stop code(identifier) and location coordinates. * hexagon, a hexagon layer of 250m (this distance is the perpendicular distance between the centre of the hexagon and its edges.)"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#importing-the-data-into-r-read-the-busstop-layer-and-convert-it-to-the-singapore-land-authority-coordinate-system-3414.",
    "href": "take home exercise 1/take home exercise 1.html#importing-the-data-into-r-read-the-busstop-layer-and-convert-it-to-the-singapore-land-authority-coordinate-system-3414.",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Importing the data into R Read the “BusStop” layer and convert it to the Singapore Land Authority coordinate system 3414.",
    "text": "Importing the data into R Read the “BusStop” layer and convert it to the Singapore Land Authority coordinate system 3414.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\", layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/linxu/ISSS624/take home exercise 1/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#a-quick-look-at-the-busstop-within-an-r-object",
    "href": "take home exercise 1/take home exercise 1.html#a-quick-look-at-the-busstop-within-an-r-object",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "A quick look at the busstop within an R object",
    "text": "A quick look at the busstop within an R object\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#read-the-busstops",
    "href": "take home exercise 1/take home exercise 1.html#read-the-busstops",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Read the busstops",
    "text": "Read the busstops\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nRows: 5709512 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): YEAR_MONTH, DAY_TYPE, PT_TYPE, ORIGIN_PT_CODE, DESTINATION_PT_CODE\ndbl (2): TIME_PER_HOUR, TOTAL_TRIPS\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#convert-to-the-factor",
    "href": "take home exercise 1/take home exercise 1.html#convert-to-the-factor",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Convert to the factor",
    "text": "Convert to the factor\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#a-quick-look-at-odbus",
    "href": "take home exercise 1/take home exercise 1.html#a-quick-look-at-odbus",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "A quick look at odbus",
    "text": "A quick look at odbus\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#geovisuallisation-and-analysis-the-peak-time-weekday-morning-weekday-afternoon-weekend-morning-and-weekend-evening.",
    "href": "take home exercise 1/take home exercise 1.html#geovisuallisation-and-analysis-the-peak-time-weekday-morning-weekday-afternoon-weekend-morning-and-weekend-evening.",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Geovisuallisation and Analysis the peak time – weekday morning, weekday afternoon, weekend morning and weekend evening.",
    "text": "Geovisuallisation and Analysis the peak time – weekday morning, weekday afternoon, weekend morning and weekend evening.\n\nweekdaymorning6_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nkable(head(weekdaymorning6_9))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n01012\n1973\n\n\n01013\n952\n\n\n01019\n1789\n\n\n01029\n2561\n\n\n01039\n2938\n\n\n01059\n1651\n\n\n\n\n\n\nweekdayafternoon17_20 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 17 &\n           TIME_PER_HOUR &lt;= 20) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nkable(head(weekdayafternoon17_20))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n01012\n8448\n\n\n01013\n7328\n\n\n01019\n3608\n\n\n01029\n9317\n\n\n01039\n12937\n\n\n01059\n2133\n\n\n\n\n\n\nweekendmorning11_14 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 11 &\n           TIME_PER_HOUR &lt;= 14) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nkable(head(weekendmorning11_14))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n01012\n2273\n\n\n01013\n1697\n\n\n01019\n1511\n\n\n01029\n3272\n\n\n01039\n5424\n\n\n01059\n1062\n\n\n\n\n\n\nweekendevening16_19 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKENDS/HOLIDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 16 &\n           TIME_PER_HOUR &lt;= 19) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nkable(head(weekendevening16_19))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n01012\n3208\n\n\n01013\n2796\n\n\n01019\n1623\n\n\n01029\n4244\n\n\n01039\n7403\n\n\n01059\n1190\n\n\n\n\n\n\nweekdaymorning6_9_summarized &lt;- weekdaymorning6_9 %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TotalTrips = sum(TRIPS))\n\n\nweekdayafternoon17_20_summarized &lt;- weekdayafternoon17_20 %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TotalTrips = sum(TRIPS))\n\n\nweekendmorning11_14_summarized &lt;- weekendmorning11_14 %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TotalTrips = sum(TRIPS))\n\n\nweekendevening16_19_summarized &lt;- weekendevening16_19 %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TotalTrips = sum(TRIPS))"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#create-the-rds-file",
    "href": "take home exercise 1/take home exercise 1.html#create-the-rds-file",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Create the rds file",
    "text": "Create the rds file\n\nif (!dir.exists(\"data/rds\")) {\n  dir.create(\"data/rds\", recursive = TRUE)\n}"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#save-the-4-peak-time-period",
    "href": "take home exercise 1/take home exercise 1.html#save-the-4-peak-time-period",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Save the 4 peak time period",
    "text": "Save the 4 peak time period\n\nwrite_rds(weekdaymorning6_9_summarized, \"data/rds/weekdaymorning6_9_summarized.rds\")\nwrite_rds(weekdayafternoon17_20_summarized, \"data/rds/weekdayafternoon17_20_summarized.rds\")\nwrite_rds(weekendmorning11_14_summarized, \"data/rds/weekendmorning11_14_summarized.rds\")\nwrite_rds(weekendevening16_19_summarized, \"data/rds/weekendevening16_19_summarized.rds\")\n\n\nweekdaymorning6_9_summarized &lt;- read_rds(\"data/rds/weekdaymorning6_9_summarized.rds\")\nweekdayafternoon17_20_summviewarized &lt;- read_rds(\"data/rds/weekdayafternoon17_20_summarized.rds\")\nweekendmorning11_14_summarized &lt;- read_rds(\"data/rds/weekendmorning11_14_summarized.rds\")\nweekendevening16_19_summarized &lt;- read_rds(\"data/rds/weekendevening16_19_summarized.rds\")"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#left-join-busstop-and-peak-time",
    "href": "take home exercise 1/take home exercise 1.html#left-join-busstop-and-peak-time",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Left join busstop and peak time",
    "text": "Left join busstop and peak time\n\nbusstops_weekday_morning &lt;- left_join(busstop, weekdaymorning6_9_summarized, by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\"))\nbusstops_weekday_afternoon &lt;- left_join(busstop, weekdayafternoon17_20_summarized, by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\"))\nbusstops_weekend_morning &lt;- left_join(busstop, weekendmorning11_14_summarized, by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\"))\nbusstops_weekend_evening &lt;- left_join(busstop, weekendevening16_19_summarized, by = c(\"BUS_STOP_N\" = \"ORIGIN_PT_CODE\"))"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#draw-4-hexagon",
    "href": "take home exercise 1/take home exercise 1.html#draw-4-hexagon",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Draw 4 Hexagon",
    "text": "Draw 4 Hexagon\n\nhexagon_grid_weekday_morning &lt;- st_make_grid(busstops_weekday_morning, cellsize = c(250, 250), what = \"polygons\", square = FALSE)\nhexagon_grid_sf_weekday_morning &lt;- st_sf(geometry = hexagon_grid_weekday_morning) %&gt;%\n  mutate(grid_id = 1:length(lengths(hexagon_grid_weekday_morning)))\n\n\nhexagon_grid_weekday_afternoon &lt;- st_make_grid(busstops_weekday_afternoon, cellsize = c(250, 250), what = \"polygons\", square = FALSE)\nhexagon_grid_sf_weekday_afternoon &lt;- st_sf(geometry = hexagon_grid_weekday_afternoon) %&gt;%\n  mutate(grid_id = 1:length(lengths(hexagon_grid_weekday_afternoon)))\n\n\nhexagon_grid_weekend_morning &lt;- st_make_grid(busstops_weekend_morning, cellsize = c(250, 250), what = \"polygons\", square = FALSE)\nhexagon_grid_sf_weekend_morning &lt;- st_sf(geometry = hexagon_grid_weekend_morning) %&gt;%\n  mutate(grid_id = 1:length(lengths(hexagon_grid_weekend_morning)))\n\n\nhexagon_grid_weekend_evening &lt;- st_make_grid(busstops_weekend_evening, cellsize = c(250, 250), what = \"polygons\", square = FALSE)\nhexagon_grid_sf_weekend_evening&lt;- st_sf(geometry = hexagon_grid_weekend_evening) %&gt;%\n  mutate(grid_id = 1:length(lengths(hexagon_grid_weekend_evening)))"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#show-busstop-map",
    "href": "take home exercise 1/take home exercise 1.html#show-busstop-map",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Show busstop map",
    "text": "Show busstop map\n\nhexagon_grid_weekday_morning &lt;- st_make_grid(busstops_weekday_morning, cellsize = c(250, 250), what = \"polygons\", square = FALSE)\nhexagon_grid_sf_weekday_morning &lt;- st_sf(geometry = hexagon_grid_weekday_morning) %&gt;%\n  mutate(grid_id = 1:length(lengths(hexagon_grid_weekday_morning)))\nhexagon_grid_sf_weekday_morning$n_colli = lengths(st_intersects(hexagon_grid_sf_weekday_morning, busstops_weekday_morning))\nhexagon_count_busstops_weekday_morning = filter(hexagon_grid_sf_weekday_morning, n_colli &gt; 0)\n\n\nmap_honeycomb &lt;- tm_shape(hexagon_count_busstops_weekday_morning) +\n  tm_fill(\n    col = \"n_colli\",  \n    palette = \"Reds\",\n    style = \"cont\",\n    title = \"Number of busstops\", \n    id = \"grid_id\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\n      \"Number of busstops: \" = \"n_colli\"  \n    ),\n    popup.format = list(\n      n_colli = list(format = \"f\", digits = 0)  \n    )\n  ) +\n  tm_borders(col = \"grey40\", lwd = 0.7)\nmap_honeycomb\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#draw-4-peak-time-maps",
    "href": "take home exercise 1/take home exercise 1.html#draw-4-peak-time-maps",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Draw 4 peak time maps",
    "text": "Draw 4 peak time maps\n\nintersects_list_morning &lt;- st_intersects(hexagon_grid_sf_weekday_morning, busstops_weekday_morning)\ntotal_trips_morning &lt;- purrr::map_dbl(intersects_list_morning, ~sum(busstops_weekday_morning$TotalTrips[.x], na.rm = TRUE))\nhexagon_grid_sf_weekday_morning$TotalTrips &lt;- total_trips_morning\nhexagon_count_totaltrips_morning &lt;- hexagon_grid_sf_weekday_morning %&gt;%\n  filter(TotalTrips &gt; 0)\n\n\nmap_honeycomb_morning &lt;- tm_shape(hexagon_count_totaltrips_morning) +\n  tm_fill(\n    col = \"TotalTrips\",  \n    palette = \"Reds\",\n    style = \"cont\",\n    title = \"Number of TotalTrips - Morning\", \n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\"Number of TotalTrips: \" = \"TotalTrips\"),\n    popup.format = list(TotalTrips = list(format = \"f\", digits = 0))\n  ) +\n  tm_borders(col = \"grey40\", lwd = 0.7)\nmap_honeycomb_morning\n\n\n\n\n\nintersects_list_afternoon &lt;- st_intersects(hexagon_grid_sf_weekday_afternoon, busstops_weekday_afternoon)\ntotal_trips_afternoon &lt;- purrr::map_dbl(intersects_list_afternoon, ~sum(busstops_weekday_afternoon$TotalTrips[.x], na.rm = TRUE))\nhexagon_grid_sf_weekday_afternoon$TotalTrips &lt;- total_trips_afternoon\nhexagon_count_totaltrips_afternoon &lt;- hexagon_grid_sf_weekday_afternoon %&gt;%\n  filter(TotalTrips &gt; 0)\n\n\nmap_honeycomb_afternoon &lt;- tm_shape(hexagon_count_totaltrips_afternoon) +\n  tm_fill(\n    col = \"TotalTrips\",  \n    palette = \"Reds\",\n    style = \"cont\",\n    title = \"Number of TotalTrips - Afternoon\", \n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\"Number of TotalTrips: \" = \"TotalTrips\"),\n    popup.format = list(TotalTrips = list(format = \"f\", digits = 0))\n  ) +\n  tm_borders(col = \"grey40\", lwd = 0.7)\nmap_honeycomb_afternoon\n\n\n\n\n\nintersects_list_weekend_morning &lt;- st_intersects(hexagon_grid_sf_weekend_morning, busstops_weekend_morning)\ntotal_trips_weekend_morning &lt;- purrr::map_dbl(intersects_list_weekend_morning, ~sum(busstops_weekend_morning$TotalTrips[.x], na.rm = TRUE))\nhexagon_grid_sf_weekend_morning$TotalTrips &lt;- total_trips_weekend_morning\nhexagon_count_totaltrips_weekend_morning &lt;- hexagon_grid_sf_weekend_morning %&gt;%\n  filter(TotalTrips &gt; 0)\n\n\nmap_honeycomb_weekend_morning &lt;- tm_shape(hexagon_count_totaltrips_weekend_morning) +\n  tm_fill(\n    col = \"TotalTrips\",  \n    palette = \"Reds\",\n    style = \"cont\",\n    title = \"Number of TotalTrips - Weekend Morning\", \n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\"Number of TotalTrips: \" = \"TotalTrips\"),\n    popup.format = list(TotalTrips = list(format = \"f\", digits = 0))\n  ) +\n  tm_borders(col = \"grey40\", lwd = 0.7)\nmap_honeycomb_weekend_morning\n\n\n\n\n\nintersects_list_weekend_evening &lt;- st_intersects(hexagon_grid_sf_weekend_evening, busstops_weekend_evening)\ntotal_trips_weekend_evening &lt;- purrr::map_dbl(intersects_list_weekend_evening, ~sum(busstops_weekend_evening$TotalTrips[.x], na.rm = TRUE))\nhexagon_grid_sf_weekend_evening$TotalTrips &lt;- total_trips_weekend_evening\nhexagon_count_totaltrips_weekend_evening &lt;- hexagon_grid_sf_weekend_evening %&gt;%\n  filter(TotalTrips &gt; 0)\n\n\nmap_honeycomb_weekend_evening &lt;- tm_shape(hexagon_count_totaltrips_weekend_evening)+\n  tm_fill(\n    col = \"TotalTrips\",  \n    palette = \"Reds\",\n    style = \"cont\",\n    title = \"Number of TotalTrips - Weekend Evening\", \n    showNA = FALSE,\n    alpha = 0.6,\n    popup.vars = c(\"Number of TotalTrips: \" = \"TotalTrips\"),\n    popup.format = list(TotalTrips = list(format = \"f\", digits = 0))\n  ) +\n  tm_borders(col = \"grey40\", lwd = 0.7)\nmap_honeycomb_weekend_evening\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting"
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#conclusion",
    "href": "take home exercise 1/take home exercise 1.html#conclusion",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Conclusion",
    "text": "Conclusion\nBased on this map, we can see that the traffic during the usual morning and evening peak hours and the weekend peak hours are quite similar. By comparing the entire scenario, we can deduce that the design of the bus stops is very consistent with the peak travel times. From the map, we can also identify a few particular points, such as 4982 and 5478, where the number of people is relatively high at all four time points. The map only provides some general and rough information; we need a more detailed analysis to assess whether our bus route design is reasonable."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekday-morning",
    "href": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekday-morning",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "LISA peak time weekday morning",
    "text": "LISA peak time weekday morning\n\nwm_q &lt;- hexagon_count_totaltrips_morning %&gt;%\n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nmoranI &lt;- global_moran(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.125\n $ K: num 130\n\n\n\nglobal_moran_test(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 14.71, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     1.247405e-01     -3.282994e-04      7.228939e-05 \n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.12474, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    TotalTrips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekday-afternoon",
    "href": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekday-afternoon",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "LISA peak time weekday afternoon",
    "text": "LISA peak time weekday afternoon\n\nwm_q &lt;- hexagon_count_totaltrips_afternoon %&gt;%\n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nmoranI &lt;- global_moran(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.0595\n $ K: num 214\n\n\n\nglobal_moran_test(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 7.1461, p-value = 4.462e-13\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     5.950141e-02     -3.275467e-04      7.009368e-05 \n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.059501, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    TotalTrips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekend-morning",
    "href": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekend-morning",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "LISA peak time weekend morning",
    "text": "LISA peak time weekend morning\n\nwm_q &lt;- hexagon_count_totaltrips_weekend_morning %&gt;%\n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nmoranI &lt;- global_moran(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.106\n $ K: num 131\n\n\n\nglobal_moran_test(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.532, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     1.061289e-01     -3.279764e-04      7.215773e-05 \n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.10613, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    TotalTrips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekend-evening",
    "href": "take home exercise 1/take home exercise 1.html#lisa-peak-time-weekend-evening",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "LISA peak time weekend evening",
    "text": "LISA peak time weekend evening\n\nwm_q &lt;- hexagon_count_totaltrips_weekend_evening %&gt;%\n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nmoranI &lt;- global_moran(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.0871\n $ K: num 178\n\n\n\nglobal_moran_test(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 10.349, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     8.711577e-02     -3.300330e-04      7.140377e-05 \n\n\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$TotalTrips,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.087116, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    TotalTrips, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n##Conclusion In the complete LISA (Local Indicators of Spatial Association) analysis, we utilize two metrics to identify spatial patterns. Initially, we examine the p-values (displayed in the right-hand map) to determine areas with statistically significant spatial autocorrelation. Regions with p-values less than 0.05 suggest that observed values are unlikely to be randomly distributed and instead exhibit significant spatial correlation with surrounding areas. These significant clusters indicate some form of spatial interaction or mutual influence, potentially due to a combination of geographical, social, economic, or other environmental factors.We need focus on the High-Low and Low-High areas, as these regions are somewhat anomalous compared to others.\nSubsequently, we assess the values of the Local Moran’s I (depicted in the left-hand map). Here, positive values denote spatial clusters, indicating similarity in observed values between a region and its neighbors. Negative values reveal spatial outliers, where a region’s values significantly differ from its surroundings, which may highlight unique characteristics or conditions of that area. Further analysis enables us to explore the potential causes behind these clusters and outliers, as well as their specific impacts on the study area.\n##Limitation\nWe have identified regions that may exhibit spatial autocorrelation. Due to the lack of relevant economic and environmental information, further analysis would require us to continue based on the data available."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#hsca-for-weekday-morning",
    "href": "take home exercise 1/take home exercise 1.html#hsca-for-weekday-morning",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "HSCA for weekday morning",
    "text": "HSCA for weekday morning\n\nwm_idw &lt;- hexagon_count_totaltrips_morning %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    TotalTrips, nb, wt, nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 3047 features and 13 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26337.76 xmax: 48345.12 ymax: 53040.21\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3,047 × 14\n   gi_star     e_gi  var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  -0.744  1.73e-4 7.26e-8  -0.633   0.527        0.128    0.064     3.63 &lt;int&gt;\n 2  -0.744  1.54e-4 6.00e-8  -0.620   0.535        0.132    0.066     4.33 &lt;int&gt;\n 3  -0.741  1.58e-4 8.17e-8  -0.539   0.590        0.248    0.124     5.83 &lt;int&gt;\n 4  -0.527  1.68e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 5  -0.741  1.62e-4 7.72e-8  -0.568   0.570        0.112    0.056     4.29 &lt;int&gt;\n 6  -0.692  1.94e-4 1.50e-7  -0.435   0.663        0.576    0.288     7.55 &lt;int&gt;\n 7  -0.526  2.78e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 8  -0.865  2.12e-4 6.12e-8  -0.782   0.434        0.088    0.044     3.15 &lt;int&gt;\n 9  -0.525  3.13e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n10  -0.716  1.85e-4 1.13e-7  -0.505   0.614        0.244    0.122     5.13 &lt;int&gt;\n# ℹ 3,037 more rows\n# ℹ 5 more variables: wts &lt;list&gt;, geometry &lt;POLYGON [m]&gt;, grid_id &lt;int&gt;,\n#   n_colli &lt;int&gt;, TotalTrips &lt;dbl&gt;\n\n\n\ncbg &lt;- HCSA %&gt;% \n  ungroup() %&gt;% \n  select(geometry, TotalTrips, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = TotalTrips, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#hcsa-for-weekday-afternoon",
    "href": "take home exercise 1/take home exercise 1.html#hcsa-for-weekday-afternoon",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "HCSA for weekday afternoon",
    "text": "HCSA for weekday afternoon\n\nwm_idw &lt;- hexagon_count_totaltrips_afternoon %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    TotalTrips, nb, wt, nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 3054 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26337.76 xmax: 48345.12 ymax: 53040.21\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3,054 × 13\n   gi_star     e_gi  var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  -0.501  1.87e-4 2.85e-7  -0.320   0.749        0.212    0.106    11.0  &lt;int&gt;\n 2  -0.501  1.52e-4 9.22e-8  -0.446   0.656        0.236    0.118     7.08 &lt;int&gt;\n 3  -0.466  1.64e-4 1.10e-7  -0.379   0.705        0.648    0.324     5.68 &lt;int&gt;\n 4  -0.361  9.83e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 5  -0.466  1.84e-4 2.00e-7  -0.327   0.743        0.088    0.044    11.9  &lt;int&gt;\n 6  -0.426  1.35e-4 4.79e-8  -0.329   0.743        0.904    0.452     5.08 &lt;int&gt;\n 7  -0.363  8.68e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 8  -0.550  2.71e-4 2.20e-7  -0.475   0.635        0.052    0.026     8.24 &lt;int&gt;\n 9  -0.358  1.28e-5 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n10  -0.443  2.04e-4 1.12e-7  -0.456   0.648        0.172    0.086     6.62 &lt;int&gt;\n# ℹ 3,044 more rows\n# ℹ 4 more variables: wts &lt;list&gt;, geometry &lt;POLYGON [m]&gt;, grid_id &lt;int&gt;,\n#   TotalTrips &lt;dbl&gt;\n\n\n\ncbg &lt;- HCSA %&gt;% \n  ungroup() %&gt;% \n  select(geometry, TotalTrips, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = TotalTrips, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#hcsa-for-weekday-afternoon-1",
    "href": "take home exercise 1/take home exercise 1.html#hcsa-for-weekday-afternoon-1",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "HCSA for weekday afternoon",
    "text": "HCSA for weekday afternoon\n\nwm_idw &lt;- hexagon_count_totaltrips_afternoon %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    TotalTrips, nb, wt, nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 3054 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26337.76 xmax: 48345.12 ymax: 53040.21\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3,054 × 13\n   gi_star     e_gi  var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  -0.501  2.30e-4 3.22e-7  -0.377   0.706        0.256    0.128     6.88 &lt;int&gt;\n 2  -0.501  1.73e-4 1.10e-7  -0.471   0.638        0.188    0.094     6.43 &lt;int&gt;\n 3  -0.466  1.71e-4 1.07e-7  -0.408   0.684        0.6      0.3       5.85 &lt;int&gt;\n 4  -0.361  9.83e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 5  -0.466  1.93e-4 2.30e-7  -0.324   0.746        0.096    0.048    13.8  &lt;int&gt;\n 6  -0.426  1.44e-4 6.84e-8  -0.311   0.756        0.884    0.442     7.75 &lt;int&gt;\n 7  -0.363  8.68e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 8  -0.550  2.59e-4 1.07e-7  -0.643   0.520        0.044    0.022     4.41 &lt;int&gt;\n 9  -0.358  1.28e-5 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n10  -0.443  2.11e-4 1.47e-7  -0.415   0.678        0.192    0.096     7.04 &lt;int&gt;\n# ℹ 3,044 more rows\n# ℹ 4 more variables: wts &lt;list&gt;, geometry &lt;POLYGON [m]&gt;, grid_id &lt;int&gt;,\n#   TotalTrips &lt;dbl&gt;\n\n\n\ncbg &lt;- HCSA %&gt;% \n  ungroup() %&gt;% \n  select(geometry, TotalTrips, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = TotalTrips, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#hcsa-for-weekend-morning",
    "href": "take home exercise 1/take home exercise 1.html#hcsa-for-weekend-morning",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "HCSA for weekend morning",
    "text": "HCSA for weekend morning\n\nwm_idw &lt;- hexagon_count_totaltrips_weekend_morning %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    TotalTrips, nb, wt, nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 3050 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26337.76 xmax: 48345.12 ymax: 53040.21\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3,050 × 13\n   gi_star     e_gi  var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  -0.669  1.62e-4 8.76e-8  -0.547   0.585        0.016    0.008     4.61 &lt;int&gt;\n 2  -0.669  1.95e-4 2.18e-7  -0.416   0.677        0.016    0.008     7.70 &lt;int&gt;\n 3  -0.647  1.86e-4 3.42e-7  -0.299   0.765        0.368    0.184     8.98 &lt;int&gt;\n 4  -0.468  3.54e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 5  -0.647  1.66e-4 8.82e-8  -0.521   0.603        0.096    0.048     9.19 &lt;int&gt;\n 6  -0.596  1.69e-4 7.97e-8  -0.471   0.638        0.6      0.3       4.56 &lt;int&gt;\n 7  -0.459  9.83e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 8  -0.754  2.39e-4 1.05e-7  -0.658   0.511        0.048    0.024     6.72 &lt;int&gt;\n 9  -0.465  5.64e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n10  -0.595  1.83e-4 5.62e-8  -0.617   0.537        0.208    0.102     3.93 &lt;int&gt;\n# ℹ 3,040 more rows\n# ℹ 4 more variables: wts &lt;list&gt;, geometry &lt;POLYGON [m]&gt;, grid_id &lt;int&gt;,\n#   TotalTrips &lt;dbl&gt;\n\n\n\ncbg &lt;- HCSA %&gt;% \n  ungroup() %&gt;% \n  select(geometry, TotalTrips, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = TotalTrips, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#hcsa-for-weekend-evening",
    "href": "take home exercise 1/take home exercise 1.html#hcsa-for-weekend-evening",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "HCSA for weekend evening",
    "text": "HCSA for weekend evening\n\nwm_idw &lt;- hexagon_count_totaltrips_weekend_evening %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    TotalTrips, nb, wt, nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 3031 features and 12 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26337.76 xmax: 48345.12 ymax: 53040.21\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3,031 × 13\n   gi_star     e_gi  var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  -0.545  1.53e-4 1.05e-7  -0.447   0.655        0.132    0.066     6.26 &lt;int&gt;\n 2  -0.545  2.10e-4 4.21e-7  -0.310   0.757        0.196    0.098     9.42 &lt;int&gt;\n 3  -0.522  1.72e-4 2.08e-7  -0.329   0.742        0.54     0.27      8.64 &lt;int&gt;\n 4  -0.387  7.11e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 5  -0.522  2.12e-4 2.78e-7  -0.361   0.718        0.064    0.032    11.8  &lt;int&gt;\n 6  -0.472  1.86e-4 1.49e-7  -0.350   0.726        0.76     0.38      5.41 &lt;int&gt;\n 7  -0.390  4.61e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n 8  -0.607  2.55e-4 2.26e-7  -0.457   0.648        0.044    0.022     9.36 &lt;int&gt;\n 9  -0.388  6.45e-6 0       NaN     NaN            1        0.002   NaN    &lt;int&gt;\n10  -0.450  2.28e-4 2.19e-7  -0.350   0.726        0.48     0.24     10.4  &lt;int&gt;\n# ℹ 3,021 more rows\n# ℹ 4 more variables: wts &lt;list&gt;, geometry &lt;POLYGON [m]&gt;, grid_id &lt;int&gt;,\n#   TotalTrips &lt;dbl&gt;\n\n\n\ncbg &lt;- HCSA %&gt;% \n  ungroup() %&gt;% \n  select(geometry, TotalTrips, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = TotalTrips, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nmap1 &lt;- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Totaltrips\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n          labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them)."
  },
  {
    "objectID": "take home exercise 1/take home exercise 1.html#conclusion-1",
    "href": "take home exercise 1/take home exercise 1.html#conclusion-1",
    "title": "take home exercise 1: Geospatial Analytics for Public Good",
    "section": "Conclusion",
    "text": "Conclusion\nThrough the hot and cold spot analysis, there are four areas with notably high GI values that we can focus on in subsequent analyses. Due to the lack of relevant economic and environmental information, we can only determine that these four areas significantly exceed the average level. Moving forward, we can delve into the reasons behind this by gathering more data and documentation."
  }
]